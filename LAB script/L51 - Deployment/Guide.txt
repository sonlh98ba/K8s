-- Set up alias
alias k=kubectl

-- Create Deployment
nano demo-deploy.yaml

----------------------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
spec:
  selector:
    matchLabels:
      app: nginx
  replicas: 2
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - name: nginx
          image: nginx:1.14.2
          ports:
          - containerPort: 80
----------------------

k apply -f demo-deploy.yaml
k get deployments
k rollout status deployment/nginx-deployment

-- Checking pod deployed
k get pod -o wide
k get pod -o wide -A

-- Checking replica set created
k get rs

curl <pod IP>

k describe deployment nginx-deployment

-- Create service to exposing pod deployed by deployment

nano demo-svc.yaml

----------------------
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
spec:
  type: NodePort
  selector:
    app: nginx
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
----------------------

k apply -f demo-svc.yaml

-- You can access to app from internet
k get svc
curl <worker IP>:<NodePort>

-- Check information of Deployment
k describe deployment nginx-deployment

-- Change image of deployment
k set image deployment/nginx-deployment nginx=httpd --record

-- Checking changed
k rollout status deployment/nginx-deployment
k get pod -o wide
k describe deployment nginx-deployment
k rollout history deployment nginx-deployment

-- Rollback to v1 (image = nginx)
k rollout undo deployment nginx-deployment --to-revision=1

-- Checking after rollback
k get deployment nginx-deployment
k describe deployment nginx-deployment

-- Scaling Deployment
k scale deployment nginx-deployment --replicas=10
k autoscale deployment nginx-deployment --min=8 --max=12 --cpu-percent=80
